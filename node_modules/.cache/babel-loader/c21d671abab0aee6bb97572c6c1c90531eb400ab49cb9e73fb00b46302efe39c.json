{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacks\\\\Documents\\\\UTP\\\\CICLO MARZO 2024\\\\INTEGRADOR1\\\\ecoreciclafront\\\\src\\\\pages\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isSending, setIsSending] = useState(false);\n  const [formData, setFormData] = useState({\n    password: '',\n    confirmPassword: ''\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSending(true);\n    if (password !== confirmPassword) {\n      toast.error('Las contraseñas no coinciden.', {\n        autoClose: 3000\n      });\n      return;\n    }\n    try {\n      await axios.post(`http://localhost:8080/api/users/reset-password/${token}`, {\n        newPassword: password\n      });\n      toast.success('Contraseña restablecida correctamente.', {\n        autoClose: 3000\n      });\n      setTimeout(() => {\n        navigate('/login');\n      }, 3000);\n    } catch (error) {\n      toast.error('Error al restablecer la contraseña.', {\n        autoClose: 3000\n      });\n    }\n  };\n  useEffect(() => {\n    setPasswordMatch(formData.password === formData.confirmPassword);\n  }, [formData.password, formData.confirmPassword]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Restablecer Contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nueva Contrase\\xF1a:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirmar Nueva Contrase\\xF1a:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmPassword\",\n          value: formData.confirmPassword,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSending,\n        children: \"Restablecer Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"zl1FYmN/sW3TzSIP8oTbxjhrFnU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","toast","useParams","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","token","navigate","password","setPassword","confirmPassword","setConfirmPassword","isSending","setIsSending","formData","setFormData","handleChange","e","target","name","value","handleSubmit","preventDefault","error","autoClose","post","newPassword","success","setTimeout","useEffect","setPasswordMatch","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/jacks/Documents/UTP/CICLO MARZO 2024/INTEGRADOR1/ecoreciclafront/src/pages/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nfunction ResetPassword() {\r\n  const { token } = useParams();\r\n  const navigate = useNavigate();\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSending(true);\r\n    if (password !== confirmPassword) {\r\n      toast.error('Las contraseñas no coinciden.', {\r\n        autoClose: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post(`http://localhost:8080/api/users/reset-password/${token}`, { newPassword: password });\r\n      toast.success('Contraseña restablecida correctamente.', {\r\n        autoClose: 3000,\r\n      });\r\n      setTimeout(() => {\r\n        navigate('/login');\r\n      }, 3000);\r\n    } catch (error) {\r\n      toast.error('Error al restablecer la contraseña.', {\r\n        autoClose: 3000,\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setPasswordMatch(formData.password === formData.confirmPassword);\r\n  }, [formData.password, formData.confirmPassword]);  \r\n\r\n  return (\r\n    <div>\r\n      <h2>Restablecer Contraseña</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Nueva Contraseña:</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password} onChange={handleChange} required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Confirmar Nueva Contraseña:</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={formData.confirmPassword} onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={isSending}>Restablecer Contraseña</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}