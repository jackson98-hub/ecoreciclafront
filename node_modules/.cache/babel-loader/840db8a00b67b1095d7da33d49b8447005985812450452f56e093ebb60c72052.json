{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacks\\\\Documents\\\\UTP\\\\CICLO MARZO 2024\\\\INTEGRADOR1\\\\ecoreciclafront\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './pages/Home';\nimport EmailVerification from './pages/EmailVerification';\nimport Login from './pages/Login';\nimport ForgotPassword from './pages/ForgotPassword';\nimport ResetPassword from './pages/ResetPassword';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userName, setUserName] = useState(\"\"); // Estado para almacenar el nombre del usuario\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setUserName(\"\"); // Limpiar el nombre del usuario al cerrar sesión\n    // Lógica adicional para limpiar la sesión, si es necesario\n  };\n\n  // Función para establecer el nombre del usuario después del inicio de sesión\n  const handleLogin = name => {\n    setIsLoggedIn(true);\n    setUserName(name); // Establecer el nombre del usuario después del inicio de sesión\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n        autoClose: 2000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Home, {\n            onLogout: handleLogout,\n            name: userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this) // Pasar el nombre del usuario al componente Home\n          : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/email-verification\",\n          element: /*#__PURE__*/_jsxDEV(EmailVerification, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 22\n          }, this) // Pasar la función handleLogin al componente Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/forgot-password\",\n          element: /*#__PURE__*/_jsxDEV(ForgotPassword, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/reset-password/:token\",\n          element: /*#__PURE__*/_jsxDEV(ResetPassword, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"99H3d4vh7Ovp7UOEnVmcmKwGe5M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Navigate","ToastContainer","Home","EmailVerification","Login","ForgotPassword","ResetPassword","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","userName","setUserName","handleLogout","handleLogin","name","children","autoClose","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLogout","to","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/jacks/Documents/UTP/CICLO MARZO 2024/INTEGRADOR1/ecoreciclafront/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nimport Home from './pages/Home';\r\nimport EmailVerification from './pages/EmailVerification';\r\nimport Login from './pages/Login';\r\nimport ForgotPassword from './pages/ForgotPassword';\r\nimport ResetPassword from './pages/ResetPassword';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userName, setUserName] = useState(\"\"); // Estado para almacenar el nombre del usuario\r\n\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false);\r\n    setUserName(\"\"); // Limpiar el nombre del usuario al cerrar sesión\r\n    // Lógica adicional para limpiar la sesión, si es necesario\r\n  };\r\n\r\n  // Función para establecer el nombre del usuario después del inicio de sesión\r\n  const handleLogin = (name) => {\r\n    setIsLoggedIn(true);\r\n    setUserName(name); // Establecer el nombre del usuario después del inicio de sesión\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <ToastContainer autoClose={2000} />\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <Home onLogout={handleLogout} name={userName} /> // Pasar el nombre del usuario al componente Home\r\n              ) : (\r\n                <Navigate to=\"/login\" />\r\n              )\r\n            }\r\n          />\r\n          <Route path=\"/email-verification\" element={<EmailVerification />} />\r\n          <Route\r\n            path=\"/login\"\r\n            element={<Login onLogin={handleLogin} />} // Pasar la función handleLogin al componente Login\r\n          />\r\n          <Route path=\"/forgot-password\" element={<ForgotPassword />} />\r\n          <Route path=\"/reset-password/:token\" element={<ResetPassword />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAO,uCAAuC;AAC9C,OAAO,2CAA2C;AAClD,OAAO,sCAAsC;AAG7C,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,aAAa,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C,MAAMoB,YAAY,GAAGA,CAAA,KAAM;IACzBH,aAAa,CAAC,KAAK,CAAC;IACpBE,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB;EACF,CAAC;;EAED;EACA,MAAME,WAAW,GAAIC,IAAI,IAAK;IAC5BL,aAAa,CAAC,IAAI,CAAC;IACnBE,WAAW,CAACG,IAAI,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,oBACET,OAAA,CAACX,MAAM;IAAAqB,QAAA,eACLV,OAAA;MAAAU,QAAA,gBACEV,OAAA,CAACP,cAAc;QAACkB,SAAS,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnCf,OAAA,CAACT,MAAM;QAAAmB,QAAA,gBACLV,OAAA,CAACV,KAAK;UACJ0B,IAAI,EAAC,GAAG;UACRC,OAAO,EACLd,UAAU,gBACRH,OAAA,CAACN,IAAI;YAACwB,QAAQ,EAAEX,YAAa;YAACE,IAAI,EAAEJ;UAAS;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,CAAC;UAAA,eAEjDf,OAAA,CAACR,QAAQ;YAAC2B,EAAE,EAAC;UAAQ;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAE1B;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFf,OAAA,CAACV,KAAK;UAAC0B,IAAI,EAAC,qBAAqB;UAACC,OAAO,eAAEjB,OAAA,CAACL,iBAAiB;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpEf,OAAA,CAACV,KAAK;UACJ0B,IAAI,EAAC,QAAQ;UACbC,OAAO,eAAEjB,OAAA,CAACJ,KAAK;YAACwB,OAAO,EAAEZ;UAAY;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC,eACFf,OAAA,CAACV,KAAK;UAAC0B,IAAI,EAAC,kBAAkB;UAACC,OAAO,eAAEjB,OAAA,CAACH,cAAc;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9Df,OAAA,CAACV,KAAK;UAAC0B,IAAI,EAAC,wBAAwB;UAACC,OAAO,eAAEjB,OAAA,CAACF,aAAa;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACb,EAAA,CA1CQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}